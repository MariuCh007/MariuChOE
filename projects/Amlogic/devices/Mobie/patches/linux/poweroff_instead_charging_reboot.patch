diff --git a/arch/arm/mach-meson8b/include/mach/pm.h b/arch/arm/mach-meson8b/include/mach/pm.h
old mode 100644
new mode 100755
index a409586..bd14dd8
--- a/arch/arm/mach-meson8b/include/mach/pm.h
+++ b/arch/arm/mach-meson8b/include/mach/pm.h
@@ -29,4 +29,5 @@ extern void early_clk_switch(int flag);
 #ifdef CONFIG_MESON_SUSPEND
 extern int meson_power_suspend(void);
 #endif /*CONFIG_MESON_SUSPEND*/
+void meson_pm_poweroff(void);
 #endif
diff --git a/arch/arm/mach-meson8b/pm.c b/arch/arm/mach-meson8b/pm.c
index 4fdd757..8f8e852 100755
--- a/arch/arm/mach-meson8b/pm.c
+++ b/arch/arm/mach-meson8b/pm.c
@@ -21,6 +21,8 @@
 #include <asm/delay.h>
 #include <asm/uaccess.h>
 
+#include <linux/gpio.h>
+
 #include <mach/pm.h>
 #include <mach/am_regs.h>
 #include <plat/sram.h>
@@ -35,7 +37,7 @@
 #ifdef CONFIG_MESON_TRUSTZONE
 #include <mach/meson-secure.h>
 #endif
-
+#include <linux/amlogic/aml_gpio_consumer.h>
 #ifdef CONFIG_SUSPEND_WATCHDOG
 #include <mach/watchdog.h>
 #endif /* CONFIG_SUSPEND_WATCHDOG */
@@ -52,7 +54,6 @@ static int early_suspend_flag = 0;
 #ifdef CONFIG_AO_TRIG_CLK
 #include "arc_trig_clk.h"
 #endif
-
 #define ON  1
 #define OFF 0
 
@@ -233,8 +234,17 @@ void analog_switch(int flag)
 #ifdef CONFIG_HAS_EARLYSUSPEND
 static void meson_system_early_suspend(struct early_suspend *h)
 {
+    int ret;
 	if (!early_suspend_flag) {
-	printk(KERN_INFO "%s\n",__func__);
+	printk(KERN_INFO "2%s\n",__func__);
+
+    ret = amlogic_gpio_direction_output(GPIOAO_13,0,"power_led"); //for power LED
+        if(ret){
+            printk("---%s----can not set output pin \n",__func__);
+            amlogic_gpio_free(GPIOAO_13,"power_led");
+        }
+
+
 	if (pdata->set_exgpio_early_suspend) {
 		pdata->set_exgpio_early_suspend(OFF);
 	}
@@ -246,11 +256,15 @@ static void meson_system_early_suspend(struct early_suspend *h)
 
 static void meson_system_late_resume(struct early_suspend *h)
 {
+    int ret;
 	if (early_suspend_flag) {
 		//early_power_gate_switch(ON);
 		//early_clk_switch(ON);
 		early_suspend_flag = 0;
-		printk(KERN_INFO "%s\n",__func__);
+		printk(KERN_INFO "1%s\n",__func__);
+
+        amlogic_set_value(GPIOAO_13,1,"power_led");
+
 	}
 }
 #endif
@@ -401,6 +415,15 @@ static void meson_pm_suspend(void)
 #endif
 }
 
+void meson_pm_poweroff(void)
+{
+//	close_hdmi();
+	aml_write_reg32(P_AO_RTI_STATUS_REG1, 0);
+	
+	meson_pm_suspend();
+
+}
+
 static int meson_pm_prepare(void)
 {
 	  printk(KERN_INFO "enter meson_pm_prepare!\n");
@@ -460,6 +483,7 @@ static struct meson_pm_config aml_pm_pdata = {
 
 static int __init meson_pm_probe(struct platform_device *pdev)
 {
+    int ret;
 	printk(KERN_INFO "enter meson_pm_probe!\n");
 #ifdef CONFIG_HAS_EARLYSUSPEND
 	early_suspend.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
@@ -467,6 +491,14 @@ static int __init meson_pm_probe(struct platform_device *pdev)
 	early_suspend.resume = meson_system_late_resume;
 	register_early_suspend(&early_suspend);
 #endif
+    ret = amlogic_gpio_request_one(GPIOAO_13,GPIOF_OUT_INIT_HIGH,"power_led"); //for power LED
+        if(ret){
+            printk("---%s----can not set output pin \n",__func__);
+            amlogic_gpio_free(GPIOAO_13,"power_led");
+        }else{
+            printk("---%s----set output pin success\n",__func__);
+        }
+
 	pdev->dev.platform_data=&aml_pm_pdata;
 	pdata = pdev->dev.platform_data;
 	if (!pdata) {
diff --git a/arch/arm/plat-meson/power.c b/arch/arm/plat-meson/power.c
index e73df57..1029cdf 100644
--- a/arch/arm/plat-meson/power.c
+++ b/arch/arm/plat-meson/power.c
@@ -24,6 +24,7 @@
 #include <linux/delay.h>
 #include <asm/proc-fns.h>
 #include <mach/system.h>
+#include <../mach-meson8b/include/mach/pm.h>
 /*
  * These are system power hooks to implement power down policy
  * pls add rule and policy notes 
@@ -72,7 +73,8 @@ void meson_power_off_prepare(void)
 void meson_power_off(void)
 {
 	printk("meson power off \n");
-	meson_common_restart('h',"charging_reboot");
+	//meson_common_restart('h',"charging_reboot");
+	meson_pm_poweroff();
 }
 
 void meson_power_idle(void)
